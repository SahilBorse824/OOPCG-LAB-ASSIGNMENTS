#ASSIGNMENT-05


TITLE:- WRITE A FUNCTION TEMPLATE FOR SELECTION SORT THAT INPUTS,SORTS AND OUTPUTS AN INTEGER ARRAY AND A FLOAT ARRAY.


CODE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


#include <iostream.h> 
#include <conio.h> 
 
template <typename T> 
void selectionSort(T arr[], int n) { 
for (int i = 0; i < n - 1; i++) { 
int minIndex = i; 
for (int j = i + 1; j < n; j++) { 
if (arr[j] < arr[minIndex]) { 
minIndex = j; 
} 
} 
// Swap the found minimum element with the first element 
T temp = arr[minIndex]; 
arr[minIndex] = arr[i]; 
arr[i] = temp; 
} 
} 
 
void printArray(int arr[], int n) { 
for (int i = 0; i < n; i++) { 
cout << arr[i] << " "; 
} 
cout << endl; 
} 
 
void printArray(float arr[], int n) { 
for (int i = 0; i < n; i++) { 
cout << arr[i] << " "; 
} 
cout << endl; 
} 
 
void main() { 
clrscr(); 
 
int intArr[] = {64, 25, 12, 22, 11}; 
int intSize = sizeof(intArr) / sizeof(intArr[0]); 
 
cout << "Original Integer Array: "; 
printArray(intArr, intSize); 
 
selectionSort(intArr, intSize); 
 
cout << "Sorted Integer Array: "; 
printArray(intArr, intSize); 
 
float floatArr[] = {64.5, 25.1, 12.2, 22.8, 11.3}; 
int floatSize = sizeof(floatArr) / sizeof(floatArr[0]); 
 
cout << "Original Float Array: "; 
printArray(floatArr, floatSize); 
 
selectionSort(floatArr, floatSize); 
 
cout << "Sorted Float Array: "; 
printArray(floatArr, floatSize); 
 
getch(); 
} 

#END OF CODE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
