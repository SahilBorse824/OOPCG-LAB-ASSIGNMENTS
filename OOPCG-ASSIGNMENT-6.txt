#include<iostream.h> 
#include<algorithm.h> 
#include<vector> 
class item 
{ 
public: 
char name[10]; 
int quantity; 
int cost; 
int code; 
bool operator==(const item&i1) 
{ 
if(code==i1.code) 
return 1; 
return 0; 
} 
bool operator<(const item&i1) 
{ 
if(code<i1.code) 
return 1; 
return 0; 
} 
}; 
vector<item>o1; 
void print(item&i1); 
void display(); 
void insert(); 
void search(); 
void del(); 
 
bool compare(const item&i1,const item&i2) 
{ 
returni1.cost<i2.cost; 
} 
int main() 
{ 
int ch; 
do{ 
std::cout<<"\n***MENu***"; 
std::cout<<"\n1.insert"; 
std::cout<<"\n2.display(); 
std::cout<<"\n3.search(); 
std::cout<<"\n4.sort(); 
std::cout<<"\n5.delete(); 
std::cout<<"\n6.exit"; 
std::cout<<"\enter your choice:"; 
std::cin>>ch; 
switch(ch) 
{ 
case 1: 
insert(); 
break; 
case 2: 
display(); 
break; 
case 3: 
search(); 
break; 
case 4: 
sort(o1.begin(),o1.end(),compare); 
std::cout<<"\n\n sorted on cost"; 
display(); 
break; 
case 5: 
del(); 
break; 
case 6: 
exit(0); 
} 
} 
while(ch!=7); 
return 0; 
} 
void insert() 
{ 
item i1; 
std::cout<<"\n enter item name:"; 
std::cin>>i1.name; 
std::cout<<"\n enter item quantity:"; 
std::cin>>i1.quantity; 
std::cout<<"\nEnter item cost:"; 
std::cin>>i1.cost; 
std::cout<<"\nenter item code:"; 
std::cin>>i1.code; 
o1.push_back(i1); 
} 
void display() 
{ 
for_each(o1.begin(),o1.end(),print); 
} 
void print(item&i1) 
{ 
std::cout<<"\n"; 
std::cout<<"\n item name:"<<i1.name; 
std::cout<<"\n item quantity:"<<i1.quantity; 
std::cout<<"\n item cost:"<<i1.cost; 
std::cout<<"\n item code:"<<i1.code; 
} 
void search() 
{ 
vector<item>::iterator p; 
item i1; 
std::cout<<"\n enter item code to search:"; 
std::cin>>i1.code; 
p=find(o1.begin(),o1.end(),i1); 
if(p==o1.end()) 
{ 
std::cout<<"\n not found"; 
} 
void dlt() 
{ 
vector<item>::iterator p; 
item i1-; 
std::cout<<"\n enter item code to delete:"; 
std::cin>>i1.code; 
p=find(o1.begin(),o1.end(),i1); 
if(p==o1.end()) 
{ 
std::cout<<"\n not found"; 
} 
else 
{ 
o1.erase(p); 
std::cout<<"\n deleted"; 
} 
}
